{
  "1": {
    "mcq": [
      {
        "q": "A system designed to perform a specific function and is a combination of both hardware and firmware is called a(n) ________.",
        "opts": [
          "General Purpose Computer",
          "Embedded System",
          "Operating System",
          "Mainframe"
        ],
        "answer": "Embedded System"
      },
      {
        "q": "What are the three main components that combine to form an embedded system?",
        "opts": [
          "CPU, RAM, ROM",
          "Hardware, Software, Mechanical",
          "Input, Output, Process",
          "VLSI, SoC, SB"
        ],
        "answer": "Hardware, Software, Mechanical"
      },
      {
        "q": "In an embedded system like a washing machine, what component holds the software that controls and monitors operations?",
        "opts": ["Display", "Buttons", "Chip", "Motor"],
        "answer": "Chip"
      },
      {
        "q": "What is the primary characteristic of an embedded system's function?",
        "opts": [
          "Multi-tasking",
          "General use",
          "User-programmable",
          "Specific task only"
        ],
        "answer": "Specific task only"
      },
      {
        "q": "An embedded system will always have a chip, which is either a microprocessor or a ________.",
        "opts": ["RAM", "ROM", "Microcontroller", "GPU"],
        "answer": "Microcontroller"
      },
      {
        "q": "Any computing system must consist of which three main components?",
        "opts": [
          "Processor, Memory, I/O",
          "CPU, GPU, DSP",
          "SB, SoC, IC",
          "Hardware, Software, Firmware"
        ],
        "answer": "Processor, Memory, I/O"
      },
      {
        "q": "A laptop, which can run many different applications, is an example of what type of computing system?",
        "opts": [
          "Specific Purpose",
          "Embedded System",
          "General Purpose",
          "Microcontroller"
        ],
        "answer": "General Purpose"
      },
      {
        "q": "A microwave, which is used for a single purpose, is an example of what type of computing system?",
        "opts": [
          "General Purpose",
          "Specific Purpose",
          "Mainframe",
          "Supercomputer"
        ],
        "answer": "Specific Purpose"
      },
      {
        "q": "Compared to a general-purpose computer, the power consumption of an embedded system is generally ________.",
        "opts": ["More", "Less", "Equal", "Variable"],
        "answer": "Less"
      },
      {
        "q": "In which type of system are user applications typically non-alterable by the user?",
        "opts": [
          "General Purpose Computer",
          "Laptop",
          "Desktop",
          "Embedded System"
        ],
        "answer": "Embedded System"
      },
      {
        "q": "Which of the following is considered a primary challenge or constraint in embedded system design?",
        "opts": [
          "High performance",
          "Large size",
          "User alterability",
          "Power consumption"
        ],
        "answer": "Power consumption"
      },
      {
        "q": "A board used to connect separate electronic components like processors and memory to build a system is called a ________.",
        "opts": [
          "System on Chip (SoC)",
          "Integrated Circuit (IC)",
          "System Board (SB)",
          "Microcontroller (MCU)"
        ],
        "answer": "System Board (SB)"
      },
      {
        "q": "What does 'SoC' stand for in the context of embedded systems?",
        "opts": [
          "System on Circuit",
          "Software on Chip",
          "System on Chip",
          "Source on Chip"
        ],
        "answer": "System on Chip"
      },
      {
        "q": "An IC that combines all high-level function elements of a device onto a single chip is a(n) ________.",
        "opts": [
          "System on Chip (SoC)",
          "System Board (SB)",
          "Breadboard",
          "MPU"
        ],
        "answer": "System on Chip (SoC)"
      },
      {
        "q": "When comparing SB and SoC, which one is generally larger in size and more expensive?",
        "opts": ["SoC", "SB", "Both are equal", "IC"],
        "answer": "SB"
      },
      {
        "q": "Which approach offers better 'Configurability' or editability during the system's design phase?",
        "opts": ["SoC", "VLSI", "IC", "SB"],
        "answer": "SB"
      },
      {
        "q": "What does 'VLSI' stand for?",
        "opts": [
          "Very Large-System Integration",
          "Virtual Large-Scale IC",
          "Very Low-Scale Integration",
          "Very Large-Scale Integrated Circuit"
        ],
        "answer": "Very Large-Scale Integrated Circuit"
      },
      {
        "q": "Microprocessors, Microcontrollers, RAMs, and ROMs are all examples of ________.",
        "opts": ["ICs", "SBs", "DSPs", "Breadboards"],
        "answer": "ICs"
      },
      {
        "q": "What component was used in old processors, like vacuum tubes, to represent one bit (0 or 1)?",
        "opts": ["Transistor", "IC", "Tube", "Chip"],
        "answer": "Tube"
      },
      {
        "q": "Modern microprocessors replaced vacuum tubes with a much smaller component called a ________.",
        "opts": ["Capacitor", "Resistor", "Transistor", "Diode"],
        "answer": "Transistor"
      },
      {
        "q": "If a system has many microprocessors, the primary or master processor is referred to as the ________.",
        "opts": ["GPU", "DSP", "CPU", "MPU"],
        "answer": "CPU"
      },
      {
        "q": "What is an 'MCU' (Microcontroller Unit)?",
        "opts": [
          "A small computer on a single IC",
          "A graphics processor",
          "A master processor",
          "A type of system board"
        ],
        "answer": "A small computer on a single IC"
      },
      {
        "q": "An MCU (Microcontroller Unit) contains a Processor (MPU), Memory, and ________.",
        "opts": ["GPU", "DSP", "I/O", "VLSI"],
        "answer": "I/O"
      },
      {
        "q": "What component is a microprocessor that assists the primary processor with graphics-related operations?",
        "opts": ["DSP", "GPU", "MCU", "MPU"],
        "answer": "GPU"
      },
      {
        "q": "What type of microprocessor is specialized to deal with complex computations?",
        "opts": ["CPU", "GPU", "DSP", "VPU"],
        "answer": "DSP"
      }
    ],
    "tf": [
      {
        "q": "A general-purpose computer is designed to perform one specific task only.",
        "answer": "False",
        "correction": "It is designed to perform many different tasks."
      },
      {
        "q": "Response time is always a critical factor in general-purpose computing systems.",
        "answer": "False",
        "correction": "Response time is critical in real-time embedded systems, not necessarily in general-purpose systems."
      },
      {
        "q": "Applications in an embedded system are typically alterable by the end-user.",
        "answer": "False",
        "correction": "Applications are typically non-alterable by the user."
      },
      {
        "q": "A System on Chip (SoC) is generally smaller and consumes less power than a System Board (SB).",
        "answer": "True",
        "correction": ""
      },
      {
        "q": "A System Board (SB) is 'configurable', meaning it is easier to edit during the design phase.",
        "answer": "True",
        "correction": ""
      },
      {
        "q": "A Microprocessor Unit (MPU) is a complete computing system on a single chip.",
        "answer": "False",
        "correction": "This describes a Microcontroller (MCU). An MPU is just the processor itself without memory or I/O on the same chip."
      },
      {
        "q": "A Microcontroller Unit (MCU) contains an MPU, memory, and I/O components.",
        "answer": "True",
        "correction": ""
      },
      {
        "q": "VLSI stands for Very Large-Scale Integrated Circuit.",
        "answer": "True",
        "correction": ""
      },
      {
        "q": "A single computing system can have multiple CPUs (Central Processing Units).",
        "answer": "False",
        "correction": "A system has one primary CPU, but can have multiple other processors (like GPUs, DSPs)."
      },
      {
        "q": "A DSP (Digital Signal Processor) is a microprocessor specialized for graphics operations.",
        "answer": "False",
        "correction": "That describes a GPU. A DSP is specialized for complex mathematical computations, particularly for signal processing."
      }
    ]
  },
  "2": {
    "mcq": [
      {
        "q": "What are the three main components found inside a Microprocessor (MP)?",
        "opts": [
          "ALU, CU, RF",
          "CPU, GPU, DSP",
          "Memory, I/O, MP",
          "Kernel, Drivers, HW"
        ],
        "answer": "ALU, CU, RF"
      },
      {
        "q": "In the system diagram, what are the GPU and DSP classified as?",
        "opts": [
          "Primary Processors",
          "Secondary Processors",
          "Memory Units",
          "I/O Devices"
        ],
        "answer": "Secondary Processors"
      },
      {
        "q": "Which component is used for complex computations, like Fourier transform, to reduce load on the primary processor?",
        "opts": ["ALU", "CU", "DSP", "RF"],
        "answer": "DSP"
      },
      {
        "q": "What is the name for a system integrating MP, Memory, I/O, GPU, and DSP on a single chip?",
        "opts": ["ECU", "ALU", "MCU", "SoC"],
        "answer": "SoC"
      },
      {
        "q": "A System on Chip (SoC) is defined as a high-performance version of what?",
        "opts": ["MCU", "CPU", "DSP", "ECU"],
        "answer": "MCU"
      },
      {
        "q": "In an 'OS Applications' architecture, what layer sits between the Application layer and the Drivers?",
        "opts": ["Kernel", "Hardware", "BareMetal SW", "ALU"],
        "answer": "Kernel"
      },
      {
        "q": "Why does a System on Chip (SoC) typically deal with OS Applications?",
        "opts": [
          "Because it is low cost",
          "Because it needs high performance",
          "Because it uses BareMetal SW",
          "Because it has no drivers"
        ],
        "answer": "Because it needs high performance"
      },
      {
        "q": "Which of the following is an example of a Non-BareMetal SW (OS Application)?",
        "opts": ["Arduino IDE", "Embedded Linux", "SCADA", "DSKY"],
        "answer": "Embedded Linux"
      },
      {
        "q": "What is an 'ECU' (Electrical Control Unit)?",
        "opts": [
          "A sensor only",
          "A Kit + Sensors & Actuators",
          "A high-performance SoC",
          "A BareMetal application"
        ],
        "answer": "A Kit + Sensors & Actuators"
      },
      {
        "q": "What is the function of a sensor?",
        "opts": [
          "Convert electrical signals to physical events",
          "Convert physical events to electrical signals",
          "Execute complex computations",
          "Store data in Register Files"
        ],
        "answer": "Convert physical events to electrical signals"
      },
      {
        "q": "What is the function of an actuator?",
        "opts": [
          "Convert electrical signals to physical events",
          "Convert physical events to electrical signals",
          "Take input from the environment",
          "Perform arithmetic operations"
        ],
        "answer": "Convert electrical signals to physical events"
      },
      {
        "q": "Which of the following is an example of an actuator?",
        "opts": [
          "Temperature sensor",
          "Light sensor",
          "Motors",
          "Pressure sensor"
        ],
        "answer": "Motors"
      },
      {
        "q": "What was the first recognized embedded system?",
        "opts": [
          "Intel 4004",
          "Arduino",
          "Apollo Guidance Computer (AGC)",
          "SCADA"
        ],
        "answer": "Apollo Guidance Computer (AGC)"
      },
      {
        "q": "What was the name of the first commercially available microprocessor introduced by Intel in 1971?",
        "opts": ["4004", "SoC", "DSKY", "AGC"],
        "answer": "4004"
      },
      {
        "q": "Second generation embedded systems were built around which type of microprocessors?",
        "opts": [
          "8-bit microprocessors",
          "16-bit microprocessors",
          "32-bit microprocessors",
          "SoCs"
        ],
        "answer": "16-bit microprocessors"
      },
      {
        "q": "What does 'ASIC' stand for?",
        "opts": [
          "Application Specific Integrated Circuits",
          "Arithmetic System Instruction Core",
          "Advanced Sensor and IC",
          "Actuator System Input Control"
        ],
        "answer": "Application Specific Integrated Circuits"
      },
      {
        "q": "Fourth generation embedded systems are built around which component?",
        "opts": [
          "8-bit microprocessors",
          "16-bit microprocessors",
          "ASICs",
          "System on Chips (SoC's)"
        ],
        "answer": "System on Chips (SoC's)"
      },
      {
        "q": "Which classification of embedded systems is characterized by simple needs and is 'not time-critical'?",
        "opts": [
          "Small-scale",
          "Medium-scale",
          "Large-scale",
          "Hard Real time"
        ],
        "answer": "Small-scale"
      },
      {
        "q": "In which type of real-time system can missing a deadline have catastrophic consequences?",
        "opts": [
          "Soft Real time systems",
          "Hard Real time systems",
          "Event triggered systems",
          "Time triggered systems"
        ],
        "answer": "Hard Real time systems"
      },
      {
        "q": "Which triggering classification follows a 'statically computed schedule' and is predictable?",
        "opts": [
          "Event Triggered",
          "Time triggered",
          "Soft Real time",
          "Hard Real time"
        ],
        "answer": "Time triggered"
      }
    ],
    "tf": [
      {
        "q": "The Control Unit (CU) is a component found inside the MP.",
        "answer": true
      },
      {
        "q": "The ALU is used for complex computations like Fourier transform.",
        "answer": false
      },
      {
        "q": "An MCU is a high-performance version of an SoC.",
        "answer": false
      },
      {
        "q": "In BareMetal SW, the Application layer deals directly with the Kernel.",
        "answer": false
      },
      {
        "q": "BareMetal SW is typically used for microcontrollers that do not have high performance.",
        "answer": true
      },
      {
        "q": "A car is an example of a large system that can consist of at least 200 ECUs.",
        "answer": true
      },
      {
        "q": "A sensor converts electrical signals into physical events.",
        "answer": false
      },
      {
        "q": "An actuator takes input from the system and gives output to the environment.",
        "answer": true
      },
      {
        "q": "The Intel 4004 was the first recognized embedded system.",
        "answer": false
      },
      {
        "q": "SCADA is an example of a first-generation embedded system.",
        "answer": false
      },
      {
        "q": "ASICs are designed for general-purpose use.",
        "answer": false
      },
      {
        "q": "Miniaturization is a characteristic of fourth-generation embedded systems.",
        "answer": true
      },
      {
        "q": "Medium-scale embedded systems usually contain an operating system.",
        "answer": true
      },
      {
        "q": "For large-scale embedded systems, response time is not critical.",
        "answer": false
      },
      {
        "q": "In Soft Real-time systems, missing a deadline is tolerated.",
        "answer": true
      },
      {
        "q": "Event-triggered systems are dynamic and depend on the occurrence of events.",
        "answer": true
      }
    ]
  },
  "3": {
    "mcq": [
      {
        "q": "What is the primary function of an Anti-lock Braking System (ABS)?",
        "opts": [
          "Increase engine power",
          "Prevent wheels from locking up",
          "Reduce fuel consumption",
          "Automate steering"
        ],
        "answer": "Prevent wheels from locking up"
      },
      {
        "q": "Which components does an ABS use to function?",
        "opts": [
          "Wheel speed sensors and an ECU",
          "GPS and an LCD screen",
          "A thermistor and a compressor",
          "A microphone and a speaker"
        ],
        "answer": "Wheel speed sensors and an ECU"
      },
      {
        "q": "Which category of embedded systems includes printers and scanners?",
        "opts": [
          "Consumer Electronics",
          "Automotive industry",
          "Healthcare",
          "Computer peripherals"
        ],
        "answer": "Computer peripherals"
      },
      {
        "q": "Which of these is NOT listed as a main purpose of embedded systems?",
        "opts": [
          "Data (Signal) Processing",
          "Monitoring",
          "Control",
          "General Purpose Computing"
        ],
        "answer": "General Purpose Computing"
      },
      {
        "q": "Which purpose involves acquiring data from the external world?",
        "opts": [
          "Data Communication",
          "Data Collection/Storage",
          "Control",
          "Monitoring"
        ],
        "answer": "Data Collection/Storage"
      },
      {
        "q": "Network hubs, routers, and switches are examples of which type of embedded system purpose?",
        "opts": [
          "Data Communication",
          "Data (Signal) Processing",
          "Monitoring",
          "Application Specific User Interface"
        ],
        "answer": "Data Communication"
      },
      {
        "q": "Embedded systems demanding speech coding or audio/video codecs are used for which purpose?",
        "opts": [
          "Control",
          "Monitoring",
          "Data (Signal) Processing",
          "Data Collection"
        ],
        "answer": "Data (Signal) Processing"
      },
      {
        "q": "Which type of embedded system is computationally intensive and often employs DSPs?",
        "opts": [
          "Data (Signal) Processing",
          "Data Communication",
          "Monitoring",
          "Control"
        ],
        "answer": "Data (Signal) Processing"
      },
      {
        "q": "What is a key characteristic of an embedded system designed for 'Monitoring'?",
        "opts": [
          "It cannot impose control",
          "It must use a DSP",
          "It requires an actuator",
          "It only accepts digital data"
        ],
        "answer": "It cannot impose control"
      },
      {
        "q": "An ECG machine is a typical example of which purpose?",
        "opts": [
          "Control",
          "Data Communication",
          "Monitoring",
          "Data (Signal) Processing"
        ],
        "answer": "Monitoring"
      },
      {
        "q": "Embedded systems with 'Control' functionality must contain which components?",
        "opts": [
          "Sensors and Actuators",
          "A microphone and a speaker",
          "Only a DSP",
          "A network router"
        ],
        "answer": "Sensors and Actuators"
      },
      {
        "q": "In an Air conditioner, what component acts as the actuator?",
        "opts": [
          "Thermistor (sensor)",
          "Compressor",
          "Handheld unit",
          "Power button"
        ],
        "answer": "Compressor"
      },
      {
        "q": "The 'Top-down' design process for embedded systems starts with which step?",
        "opts": [
          "Architecture",
          "Specification",
          "Requirements",
          "System integration"
        ],
        "answer": "Requirements"
      },
      {
        "q": "Which of the following is considered a 'nonfunctional' requirement?",
        "opts": [
          "User login",
          "Button press response",
          "Power consumption",
          "Data storage format"
        ],
        "answer": "Power consumption"
      },
      {
        "q": "Performance requirements can be a combination of soft metrics and what?",
        "opts": [
          "Manufacturing costs",
          "Hard deadlines",
          "User preferences",
          "Physical size"
        ],
        "answer": "Hard deadlines"
      },
      {
        "q": "What are the two major components of 'Cost' as a nonfunctional requirement?",
        "opts": [
          "Hardware and Software",
          "Manufacturing cost and NRE cost",
          "Battery cost and Power cost",
          "Sensor cost and Actuator cost"
        ],
        "answer": "Manufacturing cost and NRE cost"
      },
      {
        "q": "What does 'NRE' cost refer to in the design process?",
        "opts": [
          "New Requirement Engineering",
          "Non-recurring engineering",
          "Network Routing Engine",
          "Nominal Resource Expenditure"
        ],
        "answer": "Non-recurring engineering"
      },
      {
        "q": "In the requirements form, which entry should be a brief one or two-line description?",
        "opts": ["Name", "Purpose", "Inputs and outputs", "Functions"],
        "answer": "Purpose"
      },
      {
        "q": "In the GPS example, what was the specified manufacturing cost?",
        "opts": ["$10", "$30", "$100", "$1000"],
        "answer": "$30"
      },
      {
        "q": "What performance requirement was set for the GPS moving map example?",
        "opts": [
          "Updates screen within 0.25s",
          "Updates screen within 1s",
          "Battery life of 10 hours",
          "Weighs less than 10 ounces"
        ],
        "answer": "Updates screen within 0.25s"
      }
    ],
    "tf": [
      {
        "q": "Washing machines and refrigerators are examples of automotive embedded systems.",
        "answer": false
      },
      {
        "q": "ABS works by using an ECU to rapidly apply and release the brakes.",
        "answer": true
      },
      {
        "q": "EEG and ECG machines are examples of embedded systems in the 'Telecom' category.",
        "answer": false
      },
      {
        "q": "Data collected by an embedded system must always be stored; it cannot be deleted instantly.",
        "answer": false
      },
      {
        "q": "Embedded data communication can only happen through a wired interface like Ethernet.",
        "answer": false
      },
      {
        "q": "A 'Monitoring' system uses sensors to determine the state of variables.",
        "answer": true
      },
      {
        "q": "An embedded system for 'Control' contains sensors but does not require actuators.",
        "answer": false
      },
      {
        "q": "The 'Bottom-up' design process starts with system integration and moves toward requirements.",
        "answer": true
      },
      {
        "q": "Requirements for an embedded system can only be functional.",
        "answer": false
      },
      {
        "q": "Performance, cost, and physical size are examples of nonfunctional requirements.",
        "answer": true
      },
      {
        "q": "Manufacturing cost includes the cost of components, assembly, and the design process (NRE).",
        "answer": false
      },
      {
        "q": "Power consumption is usually specified by the customer in terms of allowable wattage.",
        "answer": false
      },
      {
        "q": "In a requirements form, 'Inputs and outputs' is a simple entry covering only device types.",
        "answer": false
      },
      {
        "q": "The most important power decision is often whether the machine will be battery-powered or wall-plugged.",
        "answer": true
      },
      {
        "q": "The GPS moving map example specified a power requirement of 100mW.",
        "answer": true
      }
    ]
  },
  "4": {
    "mcq": [
      {
        "q": "What document serves as the contract between the customer and the architects?",
        "opts": [
          "Requirements Form",
          "Specification",
          "Architecture Diagram",
          "User Manual"
        ],
        "answer": "Specification"
      },
      {
        "q": "Which of these is listed as a component of the GPS system specification?",
        "opts": [
          "Manufacturing Cost",
          "Power consumption",
          "Map data",
          "Physical size"
        ],
        "answer": "Map data"
      },
      {
        "q": "What are the two main categories of components defined in the architecture design phase?",
        "opts": [
          "Hardware and Software",
          "CPU and Peripherals",
          "Programs and Data Structures",
          "Functional and Non-functional"
        ],
        "answer": "Hardware and Software"
      },
      {
        "q": "In the GPS block diagram, which component finds data from the map database based on location?",
        "opts": ["GPS Receiver", "Renderer", "Search Engine", "User Interface"],
        "answer": "Search Engine"
      },
      {
        "q": "Which hardware component temporarily stores image data before it is displayed?",
        "opts": ["Memory", "CPU", "Panel I/O", "Frame Buffer"],
        "answer": "Frame Buffer"
      },
      {
        "q": "In the GPS software architecture, what is used to refresh data periodically?",
        "opts": ["Position", "Renderer", "Timer", "Pixels"],
        "answer": "Timer"
      },
      {
        "q": "At which stage of the design process are components put together, often revealing new bugs?",
        "opts": [
          "Specification",
          "System integration",
          "Architecture design",
          "Requirements"
        ],
        "answer": "System integration"
      },
      {
        "q": "Which device is described as general-purpose and requires an external memory device?",
        "opts": [
          "Microcontroller (MCU)",
          "Microprocessor (MPU)",
          "System on Chip (SoC)",
          "ALU"
        ],
        "answer": "Microprocessor (MPU)"
      },
      {
        "q": "Which device is described as specific-purpose, independent, and includes power-saving features?",
        "opts": [
          "Microcontroller (MCU)",
          "Microprocessor (MPU)",
          "Bus Set",
          "RF"
        ],
        "answer": "Microcontroller (MCU)"
      },
      {
        "q": "What are the three main busses that make up the 'Bus Set'?",
        "opts": [
          "Fetch, Decode, Execute",
          "Data, Address, Control",
          "MPU, MCU, CPU",
          "Input, Output, Memory"
        ],
        "answer": "Data, Address, Control"
      },
      {
        "q": "What are the three main components of a processor?",
        "opts": [
          "ALU, CU, RF",
          "CPU, Memory, I/O",
          "MAR, MDR, IR",
          "Data, Address, Control Bus"
        ],
        "answer": "ALU, CU, RF"
      },
      {
        "q": "What are the three main stages of the Instruction Life Cycle?",
        "opts": [
          "Fetch, Decode, Execute",
          "Read, Write, Store",
          "Compile, Link, Run",
          "Start, Wait, Stop"
        ],
        "answer": "Fetch, Decode, Execute"
      },
      {
        "q": "Which register contains the memory address of the *next* instruction to be executed?",
        "opts": [
          "Instruction Register (IR)",
          "Program Counter (PC)",
          "Memory Address Register (MAR)",
          "Register File (RF)"
        ],
        "answer": "Program Counter (PC)"
      },
      {
        "q": "What happens to the Program Counter (PC) immediately after the CPU fetches an instruction?",
        "opts": [
          "It is reset to zero",
          "It is incremented",
          "It is loaded into the IR",
          "It is sent to the ALU"
        ],
        "answer": "It is incremented"
      },
      {
        "q": "Which component is responsible for fetching the instruction from memory?",
        "opts": [
          "ALU",
          "Control Unit (CU)",
          "Register Files (RF)",
          "Instruction Decoder (ID)"
        ],
        "answer": "Control Unit (CU)"
      },
      {
        "q": "The Control Unit (CU) fetches an instruction and stores it in which register?",
        "opts": [
          "Program Counter (PC)",
          "Instruction Register (IR)",
          "ALU",
          "MDR"
        ],
        "answer": "Instruction Register (IR)"
      },
      {
        "q": "What is the purpose of the 'Decode' step in the instruction life cycle?",
        "opts": [
          "To increase the PC",
          "To fetch from memory",
          "To understand the instruction",
          "To store the result"
        ],
        "answer": "To understand the instruction"
      },
      {
        "q": "What two pieces of information are required to decode an instruction?",
        "opts": [
          "ALU and CU",
          "Instruction Set and Instruction Format",
          "Data Bus and Address Bus",
          "PC and IR"
        ],
        "answer": "Instruction Set and Instruction Format"
      }
    ],
    "tf": [
      {
        "q": "The 'Specification' is less precise than the 'Requirements'.",
        "answer": false
      },
      {
        "q": "Architecture design must only account for functional specifications.",
        "answer": false
      },
      {
        "q": "In the GPS hardware, the 'Frame Buffer' manages input from the user interface.",
        "answer": false
      },
      {
        "q": "It is recommended to start coding or designing circuits *before* architecting the system.",
        "answer": false
      },
      {
        "q": "A microprocessor (MPU) is an independent device that does not require other chips.",
        "answer": false
      },
      {
        "q": "A microcontroller (MCU) is considered a specific-purpose device.",
        "answer": true
      },
      {
        "q": "'RF' stands for Register Files, which are groups of registers inside the microprocessor.",
        "answer": true
      },
      {
        "q": "The Program Counter (PC) is a register located inside the Register Files.",
        "answer": true
      },
      {
        "q": "C Code is directly converted into Machine Language (0s and 1s).",
        "answer": false
      },
      {
        "q": "The Program Counter (PC) contains the address of the *current* instruction being executed.",
        "answer": false
      },
      {
        "q": "After fetching an instruction, the CPU increments the PC to point to the next instruction.",
        "answer": true
      },
      {
        "q": "The ALU is the component that fetches the instruction from ROM.",
        "answer": false
      },
      {
        "q": "It is easier to fetch an instruction to a register inside the CPU than to deal directly with the Bus.",
        "answer": true
      },
      {
        "q": "The Instruction Decoder (ID) is located inside the Control Unit (CU).",
        "answer": true
      },
      {
        "q": "Decoding an instruction involves sending a signal to the ALU.",
        "answer": true
      }
    ]
  },
  "5": {
    "mcq": [
      {
        "q": "What are the three main stages of the processor's Instruction Life Cycle?",
        "opts": [
          "Fetch, Decode, Execute",
          "Read, Write, Store",
          "Compile, Link, Run",
          "Input, Process, Output"
        ],
        "answer": "Fetch, Decode, Execute"
      },
      {
        "q": "What is the primary function of the Program Counter (PC)?",
        "opts": [
          "Store instruction result",
          "Hold address of next instruction",
          "Decode the instruction",
          "Perform arithmetic operations"
        ],
        "answer": "Hold address of next instruction"
      },
      {
        "q": "What happens to the Program Counter (PC) immediately after the CPU fetches an instruction?",
        "opts": [
          "It is cleared",
          "It is incremented",
          "It is decoded",
          "It is sent to ALU"
        ],
        "answer": "It is incremented"
      },
      {
        "q": "Which component fetches the instruction from memory and places it in the Instruction Register (IR)?",
        "opts": ["ALU", "Control Unit (CU)", "Register File (RF)", "PC"],
        "answer": "Control Unit (CU)"
      },
      {
        "q": "What is the primary reason for fetching instructions from memory into a CPU register?",
        "opts": [
          "Memory is slow",
          "Dealing with the Bus is hard",
          "Registers are larger",
          "To save power"
        ],
        "answer": "Dealing with the Bus is hard"
      },
      {
        "q": "Which component inside the Control Unit is used to understand the instruction?",
        "opts": ["ALU", "Instruction Decoder (ID)", "Accumulator", "PC"],
        "answer": "Instruction Decoder (ID)"
      },
      {
        "q": "What two pieces of information are required to decode an instruction?",
        "opts": [
          "ALU and CU",
          "Instruction Set and Instruction Format",
          "Data Bus and Address Bus",
          "PC and IR"
        ],
        "answer": "Instruction Set and Instruction Format"
      },
      {
        "q": "In an instruction format, what is the part that specifies the operation (e.g., ADD, SUB)?",
        "opts": ["Op-code", "Operand 1", "Operand 2", "Address"],
        "answer": "Op-code"
      },
      {
        "q": "In old processors, which specific register was used to store the results of the ALU?",
        "opts": [
          "Program Counter (PC)",
          "Instruction Register (IR)",
          "Accumulator",
          "General Purpose Register"
        ],
        "answer": "Accumulator"
      },
      {
        "q": "What mapping is defined by the 'Instruction Set'?",
        "opts": [
          "Op-code to Operation (e.g., 00010 to ADD)",
          "Register to Memory Address",
          "C Code to Assembly Code",
          "CPU to Bus"
        ],
        "answer": "Op-code to Operation (e.g., 00010 to ADD)"
      },
      {
        "q": "What are the two main types of Instruction Set Architecture (ISA)?",
        "opts": [
          "RISC and CISC",
          "Harvard and Von-Neumann",
          "ALU and CU",
          "Hard-Wired and Memory-Mapped"
        ],
        "answer": "RISC and CISC"
      },
      {
        "q": "What does 'RISC' stand for?",
        "opts": [
          "Reduced Instruction Set Computing",
          "Rapid Instruction System Core",
          "Register Intensive System CPU",
          "Reusable Instruction Set Compiler"
        ],
        "answer": "Reduced Instruction Set Computing"
      },
      {
        "q": "What does 'CISC' stand for?",
        "opts": [
          "Complex Instruction Set Computing",
          "Common Instruction System Core",
          "Compiled Instruction Set CPU",
          "Controlled Instruction System Compiler"
        ],
        "answer": "Complex Instruction Set Computing"
      },
      {
        "q": "Which ISA type understands *fewer* instructions and requires a *strong* compiler?",
        "opts": ["RISC", "CISC", "ISA", "ID"],
        "answer": "RISC"
      },
      {
        "q": "What are the two main manufacturing methods for an Instruction Decoder (ID)?",
        "opts": [
          "RISC and CISC",
          "Hard-Wired and Memory-Mapped",
          "ALU and CU",
          "Hardware and Software"
        ],
        "answer": "Hard-Wired and Memory-Mapped"
      },
      {
        "q": "Which ID manufacturing method uses logic gates, is fast, and is typical for RISC?",
        "opts": ["Hard-Wired", "Memory-Mapped", "Compiler", "Accumulator"],
        "answer": "Hard-Wired"
      },
      {
        "q": "Which ID manufacturing method is slower because it searches for instructions in memory and is typical for CISC?",
        "opts": ["Hard-Wired", "Memory-Mapped", "Compiler", "Logic Gates"],
        "answer": "Memory-Mapped"
      },
      {
        "q": "Which ISA is most commonly used in embedded systems?",
        "opts": ["RISC", "CISC", "Both", "Neither"],
        "answer": "RISC"
      },
      {
        "q": "Which ISA is characterized by single instructions that can execute several low-level operations?",
        "opts": ["RISC", "CISC", "ALU", "CU"],
        "answer": "CISC"
      }
    ],
    "tf": [
      {
        "q": "The Program Counter (PC) is a register located inside the Register Files.",
        "answer": true
      },
      {
        "q": "The PC holds the memory address of the instruction *currently* being executed.",
        "answer": false
      },
      {
        "q": "Decoding an instruction means sending a signal to the ALU to specify the operation.",
        "answer": true
      },
      {
        "q": "In modern microprocessors, all ALU results are stored in the Accumulator.",
        "answer": false
      },
      {
        "q": "All microprocessors use the same machine language (e.g., '000' for ADD).",
        "answer": false
      },
      {
        "q": "Using C language is often better than assembly because assembly language can vary between microprocessors.",
        "answer": true
      },
      {
        "q": "Understanding an instruction requires only Hardware (Instruction Decoder).",
        "answer": false
      },
      {
        "q": "CISC architecture understands *many* instructions and requires a *simple* compiler.",
        "answer": true
      },
      {
        "q": "A 'Hard-Wired' ID is expensive if you need it to understand many instructions.",
        "answer": true
      },
      {
        "q": "A 'Memory-Mapped' ID needs a strong compiler.",
        "answer": false
      },
      {
        "q": "A 'Hard-Wired' ID is slower than a 'Memory-Mapped' ID.",
        "answer": false
      },
      {
        "q": "CISC is typically used for high-performance systems like computers.",
        "answer": true
      },
      {
        "q": "RISC architecture typically has a range of 30 to 40 instructions.",
        "answer": true
      },
      {
        "q": "CISC architecture can only use Von-Neumann Architecture.",
        "answer": false
      }
    ]
  },
  "6": {
    "mcq": [
      {
        "q": "What are the two main types of Register Files?",
        "opts": ["GPR and SPR", "ALU and CU", "PC and SP", "ROM and RAM"],
        "answer": "GPR and SPR"
      },
      {
        "q": "What is the primary function of General Purpose Registers (GPR)?",
        "opts": [
          "Store data permanently",
          "Store data temporarily",
          "Hold the next instruction",
          "Store status flags"
        ],
        "answer": "Store data temporarily"
      },
      {
        "q": "Why might a programmer use the 'register' keyword in C?",
        "opts": [
          "To guarantee memory storage",
          "To store in GPR for faster access",
          "To create a permanent variable",
          "To define a status flag"
        ],
        "answer": "To store in GPR for faster access"
      },
      {
        "q": "What happens if a 'register' keyword is used but no GPR is available?",
        "opts": [
          "The program crashes",
          "The variable is stored in memory",
          "It waits for a GPR",
          "It is stored in the PC"
        ],
        "answer": "The variable is stored in memory"
      },
      {
        "q": "Which register holds the memory address of the *next* instruction?",
        "opts": [
          "Stack Pointer (SP)",
          "Instruction Register (IR)",
          "Program Counter (PC)",
          "Accumulator (ACC)"
        ],
        "answer": "Program Counter (PC)"
      },
      {
        "q": "What does the Stack Pointer (SP) register store?",
        "opts": [
          "The next instruction address",
          "The last ALU result",
          "The address of the last item on the stack",
          "The current instruction"
        ],
        "answer": "The address of the last item on the stack"
      },
      {
        "q": "The stack is a memory region that operates in which manner?",
        "opts": [
          "FIFO (First In, First Out)",
          "LIFO (Last In, First Out)",
          "Random Access",
          "Read Only"
        ],
        "answer": "LIFO (Last In, First Out)"
      },
      {
        "q": "Which register stores the instruction *after* it is fetched from memory?",
        "opts": [
          "Instruction Register (IR)",
          "Program Counter (PC)",
          "Process Status Word (PSW)",
          "Stack Pointer (SP)"
        ],
        "answer": "Instruction Register (IR)"
      },
      {
        "q": "What is the Process Status Word (PSW) register?",
        "opts": [
          "A general-purpose register",
          "A set of flags (bits)",
          "The stack memory",
          "The instruction itself"
        ],
        "answer": "A set of flags (bits)"
      },
      {
        "q": "The 'Sign flag' in the PSW indicates the sign of what?",
        "opts": [
          "The next instruction",
          "The last data on the stack",
          "The last result from the ALU",
          "The PC address"
        ],
        "answer": "The last result from the ALU"
      },
      {
        "q": "Why does a 'JMP' (Jump) instruction typically not require an ALU operation?",
        "opts": [
          "It only changes the PC",
          "It is a complex operation",
          "It uses the Stack Pointer",
          "It writes to memory"
        ],
        "answer": "It only changes the PC"
      },
      {
        "q": "In an 8-bit architecture, what is the maximum size of the ALU operands?",
        "opts": ["4-bits", "8-bits", "16-bits", "32-bits"],
        "answer": "8-bits"
      },
      {
        "q": "What is the solution for handling operands larger than the ALU's architecture (e.g., 16-bit data in an 8-bit ALU)?",
        "opts": [
          "Slicing",
          "Jumping (JMP)",
          "Stacking (LIFO)",
          "Flagging (PSW)"
        ],
        "answer": "Slicing"
      },
      {
        "q": "In an 8-bit architecture, one memory location is typically equal to what?",
        "opts": ["1 bit", "4 bits", "1 byte (8-bits)", "2 bytes (16-bits)"],
        "answer": "1 byte (8-bits)"
      }
    ],
    "tf": [
      {
        "q": "GPRs store ALU results temporarily until the CU stores them in RAM.",
        "answer": true
      },
      {
        "q": "Using the 'register' keyword in C is a guarantee that the variable will be stored in a GPR.",
        "answer": false
      },
      {
        "q": "The Program Counter (PC) is classified as a Special Purpose Register (SPR).",
        "answer": true
      },
      {
        "q": "The Stack Pointer (SP) holds the address of the *first* item added to the stack.",
        "answer": false
      },
      {
        "q": "The Accumulator (ACC) is a modern register used in all new processors.",
        "answer": false
      },
      {
        "q": "The Process Status Word (PSW) flags are updated by every type of instruction, including JMP.",
        "answer": false
      },
      {
        "q": "An Increment (INC) instruction must always use the ALU.",
        "answer": false
      },
      {
        "q": "An 8-bit architecture means the width of the memory register is 8-bits.",
        "answer": true
      },
      {
        "q": "'Slicing' involves dividing a single operation into multiple smaller operations.",
        "answer": true
      }
    ]
  }
}
